name: Build, Scan & Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install a Node.js runtime (even though our frontâ€‘end is static) so we can run security scanners.
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies (if any)
        run: |
          if [ -f package.json ]; then
            npm ci --no-audit --no-fund
          fi

      # Run a basic static application security test using npm audit (will gracefully handle absence of package.json)
      - name: Run npm audit for vulnerability scanning
        run: |
          if [ -f package.json ]; then
            npm audit --audit-level=high || echo "npm audit completed"
          else
            echo "No package.json found; skipping npm audit"
          fi

      # Upload the front end files to an S3 bucket for hosting
      - name: Deploy static site to S3
        if: github.ref == 'refs/heads/main'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
        run: |
          sudo apt-get update && sudo apt-get install -y awscli
          aws s3 sync dpdp_frontend/ s3://$S3_BUCKET/ --delete

      - name: Invalidate CloudFront (optional)
        if: github.ref == 'refs/heads/main' && env.CLOUDFRONT_DISTRIBUTION_ID != ''
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
        run: |
          aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths '/*'
